openapi: "3.1.0"
info:
  title: "AMRO Recipe Finder API"
  description: "Home Assignment for ABN AMRO"
  version: "1.0.0"
servers:
  - url: "https://localhost:9000"
paths:
  /api/v1/recipes/{recipeId}:
    get:
      summary: "GET api/v1/recipes/{recipeId}"
      operationId: "getRecipe"
      parameters:
        - name: "recipeId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "Authorization"
          in: "header"
          required: true
          schema:
            type: "string"
            format: "Bearer <token>"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecipeResponse"
        "404":
            description: "Not Found"
            content:
                '*/*':
                schema:
                    $ref: "#/components/schemas/RecipeResponse"
        "403":
            description: "Forbidden"
            content:
                '*/*':
                schema:
                    $ref: "#/components/schemas/RecipeResponse"
    put:
      summary: "PUT api/v1/recipes/{recipeId}"
      operationId: "updateRecipe"
      parameters:
        - name: "recipeId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "Authorization"
          in: "header"
          required: true
          schema:
            type: "string"
            format: "Bearer <token>"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Recipe"
        required: true
      responses:
        "201":
            description: "Created"
            content:
                '*/*':
                schema:
                    $ref: "#/components/schemas/RecipeResponse"
        "404":
            description: "Not Found"
            content:
                '*/*':
                schema:
                    $ref: "#/components/schemas/RecipeResponse"
        "403":
            description: "Forbidden"
            content:
                '*/*':
                schema:
                    $ref: "#/components/schemas/RecipeResponse"
        "400":
            description: "Bad Request"
            content:
                '*/*':
                schema:
                    $ref: "#/components/schemas/RecipeResponse"

    delete:
      summary: "DELETE api/v1/recipes/{recipeId}"
      operationId: "deleteRecipe"
      parameters:
        - name: "recipeId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "Authorization"
          in: "header"
          required: true
          schema:
            type: "string"
            format: "Bearer <token>"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RecipeResponse"
        "403":
            description: "Forbidden"
            content:
                '*/*':
                schema:
                    $ref: "#/components/schemas/RecipeResponse"
  /api/v1/recipes:
    get:
      summary: "GET api/v1/recipes"
      operationId: "getRecipes"
      parameters:
        - name: "Authorization"
          in: "header"
          required: true
          schema:
            type: "string"
            format: "Bearer <token>"
        - name: "description"
          in: "query"
          required: false
          schema:
            type: "string"
        - name: "isVegan"
          in: "query"
          required: false
          schema:
            type: "boolean"
        - name: "numServings"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
        - name: "ingredients"
          in: "query"
          required: false
          schema:
            type: "string"
        - name: "excludeIngredients"
          in: "query"
          required: false
          schema:
            type: "string"
        - name: "page"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "0"
        - name: "pageSize"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "100"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PaginatedRecipeResponse"
        "403":
            description: "Forbidden"
            content:
                '*/*':
                schema:
                    $ref: "#/components/schemas/RecipeResponse"
    post:
      summary: "POST api/v1/recipes"
      operationId: "createRecipe"
      parameters:
        - name: "Authorization"
          in: "header"
          required: true
          schema:
            type: "string"
            format: "Bearer <token>"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Recipe"
        required: true
      responses:
        "201":
            description: "Created"
            content:
                '*/*':
                schema:
                    $ref: "#/components/schemas/RecipeResponse"
        "403":
            description: "Forbidden"
            content:
                '*/*':
                schema:
                    $ref: "#/components/schemas/RecipeResponse"
        "400":
            description: "Bad Request"
            content:
                '*/*':
                schema:
                    $ref: "#/components/schemas/RecipeResponse"
components:
  schemas:
    RecipeDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        description:
          type: "string"
        is_vegan:
          type: "boolean"
        num_servings:
          type: "integer"
          format: "int32"
        ingredients:
          type: "array"
          items:
            type: "string"
    RecipeResponse:
      type: "object"
      properties:
        StatusCode:
          type: "integer"
          format: "int32"
        message:
          type: "string"
        payload:
          $ref: "#/components/schemas/RecipeDTO"
    PaginatedRecipeResponse:
      type: "object"
      properties:
        recipes:
          $ref: "#/components/schemas/RecipeDTO"
    Recipe:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        description:
          type: "string"
        is_vegan:
          type: "boolean"
        num_servings:
          type: "integer"
          format: "int32"
        ingredients:
          type: "array"
          items:
            type: "string"
